# This file is autogenerated by maturin v1.7.0
# To update, run
#
#    maturin generate-ci github --pytest
#
name: CI

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["x86_64", "aarch64"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --features pyo3/abi3-py310
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist
      - name: Test wheels
        if: ${{ startsWith(matrix.target, 'x86_64') }}
        shell: bash
        run: |
          set -e
          python3 -m venv .venv
          source .venv/bin/activate
          pip install tiny-keccak --find-links dist --force-reinstall
          pip install pytest
          pytest
      - name: Test wheels
        if: ${{ !startsWith(matrix.target, 'x86_64') }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-venv
          run: |
            set -e
            python3 -m venv .venv
            source .venv/bin/activate
            pip install pytest
            pip install tiny-keccak --find-links dist --force-reinstall
            pytest

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: ["x86_64", "aarch64"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --features pyo3/abi3-py310
          sccache: 'true'
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.target }}
          path: dist
      - name: Test wheels
        if: ${{ startsWith(matrix.target, 'x86_64') }}
        uses: addnab/docker-run-action@v3
        with:
          image: alpine:latest
          options: -v ${{ github.workspace }}:/io -w /io
          run: |
            set -e
            apk add py3-pip
            python3 -m venv .venv
            source .venv/bin/activate
            pip install tiny-keccak --no-index --find-links dist --force-reinstall
            pip install pytest
            pytest
      - name: Test wheels
        if: ${{ !startsWith(matrix.target, 'x86_64') }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.target }}
          distro: alpine_latest
          githubToken: ${{ github.token }}
          install: |
            apk add py3-pip
          run: |
            set -e
            python3 -m venv .venv
            source .venv/bin/activate
            pip install pytest
            pip install tiny-keccak --find-links dist --force-reinstall
            pytest

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: ["x64"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --features pyo3/abi3-py310
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}
          path: dist
      - name: Test wheels
        shell: bash
        run: |
          set -e
          python3 -m venv .venv
          source .venv/Scripts/activate
          pip install tiny-keccak --find-links dist --force-reinstall
          pip install pytest
          pytest

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-12
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --features pyo3/abi3-py310
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist
      - name: Test wheels
        run: |
          set -e
          python3 -m venv .venv
          source .venv/bin/activate
          pip install tiny-keccak --find-links dist --force-reinstall
          pip install pytest
          pytest

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, musllinux, windows, macos, sdist]
    # https://www.maturin.rs/distribution#using-pypis-trusted-publishing
    environment:
      name: pypi
      url: https://pypi.org/project/tiny-keccak/
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
